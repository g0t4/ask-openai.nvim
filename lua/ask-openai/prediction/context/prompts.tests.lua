local prompts = require("ask-openai.prediction.context.prompts")
require('ask-openai.helpers.testing')

describe("parse_includes", function()
    describe("/all", function()
        local function should_detect_slash_all(original_prompt, expected_cleaned)
            local includes = prompts.parse_includes(original_prompt)
            assert.is_true(includes.all, "includes.all should be true for '" .. original_prompt .. "'")
            assert.are_equal(expected_cleaned, includes.cleaned_prompt)
        end
        it("'/all' slash command is detected and stripped", function()
            should_detect_slash_all("foo /all bar", "foo bar")
            should_detect_slash_all("/all foo", "foo")
            should_detect_slash_all("foo /all", "foo")
        end)

        local function should_not_detect_slash_all(original_prompt)
            local includes = prompts.parse_includes(original_prompt)
            assert.is_false(includes.all, "includes.all should be false for '" .. original_prompt .. "'")
            assert.are_equal(original_prompt, includes.cleaned_prompt)
        end
        it("'/all' alone is not detected - for now b/c that means theres no user prompt!", function()
            -- FYI maybe I want to have this parse and strip? but for now it seems moot to do this without any other prompt text
            should_not_detect_slash_all("/all")
        end)
        it("'/allFoo' - in front of word is not stripped", function()
            should_not_detect_slash_all("/allFoo ")
            should_not_detect_slash_all(" /allFoo ")
            should_not_detect_slash_all(" /allFoo")
            should_not_detect_slash_all("/allFoo")
        end)
        it("'foo/allbar' - in between word is not stripped", function()
            should_not_detect_slash_all("foo/allbar ")
            should_not_detect_slash_all(" foo/allbar ")
            should_not_detect_slash_all(" foo/allbar")
            should_not_detect_slash_all("foo/allbar")
        end)
        it("'bar/all' - at end of word is not stripped", function()
            should_not_detect_slash_all("bar/all ")
            should_not_detect_slash_all(" bar/all ")
            should_not_detect_slash_all(" bar/all")
            should_not_detect_slash_all("bar/all")
        end)
    end)
    describe("/others", function()
        -- just add one test per, do not exercise tests of the parsing/stripping
        it("should detect /yanks", function()
            local includes = prompts.parse_includes("foo /yanks bar")
            assert.is_true(includes.yanks, "includes.yanks should be true")
            assert.are_equal("foo bar", includes.cleaned_prompt)
        end)
    end)
end)
